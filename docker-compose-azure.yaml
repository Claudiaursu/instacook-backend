services:
  cooking:
    image: ursuclaudia/instacook-backend-cooking
    depends_on:
      - postgres
    # command: npm run start:dev cooking
    # env_file:
    #   - ./apps/cooking/.env
    # environment:
    #   PG_HOST: postgres
    #   PG_PORT: 5432
    #   PG_DATABASE: instacook
    #   PG_USER: postgres
    #   PG_PASS: parolapostgres
    # volumes: 
    #   - .:/usr/src/app
    #   - /usr/src/app/node_modules
    ports:
      - '3333:3333'

  user-interaction:
    image: ursuclaudia/instacook-backend-postgres
    depends_on:
      - postgres
    # command: npm run start:dev user-interaction
    # env_file:
    #   - ./apps/user-interaction/.env
    # environment:
    #   PG_HOST: postgres
    #   PG_PORT: 5432
    #   PG_DATABASE: instacook
    #   PG_USER: postgres
    #   PG_PASS: parolapostgres
    # volumes: 
    #   - .:/usr/src/app
    #   - /usr/src/app/node_modules
    ports:
      - '9083:9083'

  competitions:
    image: ursuclaudia/instacook-backend-competitions
    depends_on:
      - postgres
    # environment:
    #   PG_HOST: postgres
    #   PG_PORT: 5432
    #   PG_DATABASE: instacook
    #   PG_USER: postgres
    #   PG_PASS: parolapostgres
    # command: npm run start:dev competitions
    # volumes: 
    #   - .:/usr/src/app
    #   - /usr/src/app/node_modules
    ports:
      - '9082:9082'

  # rabbitmq:
  #   image: rabbitmq:3-management-alpine
  #   ports: 
  #     - '5672:5672'

  postgres:
    container_name: postgres
    image: ursuclaudia/instacook-backend-user-interaction
    restart: always
    # volumes:
    #   - ./init.sql:/docker-entrypoint-initdb.d/init.sql 
    # ports:
    #   - '5432:5432' 
    # environment:
    #   POSTGRES_DB: instacook
    #   POSTGRES_USER: postgres
    #   POSTGRES_PASSWORD: parolapostgres
 