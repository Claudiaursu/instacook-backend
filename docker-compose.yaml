services:
  cooking:
    build:
      context: .
      dockerfile: ./apps/cooking/Dockerfile
      target: development
    depends_on:
      - postgres
    command: npm run start:dev cooking
    env_file:
      - ./apps/cooking/.env
    volumes: 
      - .:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - '3333:3333'

  user-interaction:
    build:
      context: .
      dockerfile: ./apps/user-interaction/Dockerfile
      target: development
    depends_on:
      - postgres
    command: npm run start:dev user-interaction
    env_file:
      - ./apps/user-interaction/.env
    volumes: 
      - .:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - '9083:9083'

  competitions:
    build:
      context: .
      dockerfile: ./apps/competitions/Dockerfile
      target: development
    depends_on:
      - postgres
    command: npm run start:dev competitions
    volumes: 
      - .:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - '9082:9082'

  rabbitmq:
    image: rabbitmq:3-management-alpine
    ports: 
      - '5672:5672'

  postgres:
    container_name: postgres
    image: postgres:12
    restart: always
    ports:
      - '5432:5432'
    environment:
      POSTGRES_DB: instacook
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: parolapostgres
 