services:
  cooking:
    build:
      context: .
      dockerfile: ./apps/cooking/Dockerfile
      target: development
    depends_on:
      - postgres
    command: npm run start:dev cooking
    environment:
      PG_HOST: postgres
      PG_PORT: 5432
      PG_DATABASE: instacook
      PG_USER: postgres
      PG_PASS: parolapostgres
      JWT_SECRET: blablabla
    volumes: 
      - .:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - '3333:3333'

  auth:
    build:
      context: .
      dockerfile: ./apps/auth/Dockerfile
      target: development
    depends_on:
      - user-interaction
    command: npm run start:dev auth
    environment:
      JWT_SECRET: blablabla
      USER_INTERACTION_URL: 'http://user-interaction:9083/v1/users'
    volumes: 
      - .:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - '8080:8080'

  user-interaction:
    build:
      context: .
      dockerfile: ./apps/user-interaction/Dockerfile
      target: development
    depends_on:
      - postgres
    command: npm run start:dev user-interaction
    environment:
      PG_HOST: postgres
      PG_PORT: 5432
      PG_DATABASE: instacook
      PG_USER: postgres
      PG_PASS: parolapostgres
      JWT_SECRET: blablabla
    volumes: 
      - .:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - '9083:9083'

  # competitions:
  #   build:
  #     context: .
  #     dockerfile: ./apps/competitions/Dockerfile
  #     target: development
  #   depends_on:
  #     - postgres
  #   environment:
  #     PG_HOST: postgres
  #     PG_PORT: 5432
  #     PG_DATABASE: instacook
  #     PG_USER: postgres
  #     PG_PASS: parolapostgres
  #     JWT_SECRET: blablabla
  #   command: npm run start:dev competitions
  #   volumes: 
  #     - .:/usr/src/app
  #     - /usr/src/app/node_modules
  #   ports:
  #     - '9082:9082'

  notifications:
    build:
      context: .
      dockerfile: ./apps/notifications/Dockerfile
      target: development
    depends_on:
      - postgres
      - rabbitmq
    environment:
      PG_HOST: postgres
      PG_PORT: 5432
      PG_DATABASE: instacook
      PG_USER: postgres
      PG_PASS: parolapostgres
      JWT_SECRET: blablabla
      RABBITMQ_URL: amqp://user:password@rabbitmq:5672
      COOKING_URL: http://cooking:3333/v1/recipes
    command: npm run start:dev notifications
    volumes: 
      - .:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - '9082:9082'

  rabbitmq:
    image: rabbitmq:3-management
    ports: 
      - '5672:5672'
      - '15672:15672'
    environment:
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: password

  postgres:
    container_name: postgres
    image: postgres:12
    restart: always
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql 
    # ports:
    #   - '5432:5432' 
    environment:
      POSTGRES_DB: instacook
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: parolapostgres
 